@model NewsArticleViewModel

@{
    ViewData["Title"] = "News Details"; // More reader-focused title
    Layout = "~/Views/Shared/_Layout.cshtml"; // Assuming you fixed _Layout.cshtml to not have navbar
}

<style>
    /* Styling for News Details Page - Reader-Friendly Focus */

    :root {
        --primary-color: #0056b3;
        --secondary-color: #6c757d;
        --background-color: #f8f9fa;
        --text-color: #343a40;
        --accent-color: #ffc107;
        --article-background: #ffffff;
        --article-border: #dee2e6;
        --meta-color: #6c757d;
        --details-page-max-width: 800px; /* Max width for content area */
        --details-page-padding: 20px;
        --details-content-font-size: 1.1rem; /* Larger font for content */
        --details-content-line-height: 1.7; /* Increased line height for readability */
    }

    body {
        background-color: var(--background-color);
        color: var(--text-color);
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; /* Reader-friendly font */
        line-height: 1.6;
    }

    .details-container {
        max-width: var(--details-page-max-width);
        margin: 20px auto; /* Center the content container */
        padding: var(--details-page-padding);
        background-color: var(--article-background);
        border: 1px solid var(--article-border);
        border-radius: 8px;
        box-shadow: 0 0 10px rgba(0,0,0,0.05); /* Subtle shadow */
    }

    .news-title {
        font-size: 2.5em; /* Larger and more prominent title */
        color: var(--primary-color);
        margin-bottom: 10px;
        line-height: 1.2;
    }

    .news-headline {
        font-size: 1.3em;
        font-style: italic;
        color: var(--secondary-color);
        margin-bottom: 20px;
    }

    .meta-info {
        font-size: 0.95em;
        color: var(--meta-color);
        margin-bottom: 25px;
        border-bottom: 1px solid var(--article-border); /* Separator line */
        padding-bottom: 10px;
    }

    .news-content {
        font-size: var(--details-content-font-size);
        line-height: var(--details-content-line-height);
        margin-bottom: 30px; /* More space after content */
        white-space: pre-line; /* Preserve line breaks from NewsContent if any */
    }

    .action-buttons {
        margin-top: 20px;
        text-align: right;
    }

        .action-buttons a, .action-buttons button {
            margin-left: 10px;
        }

    td {
        padding-left: 10px; /* Add left padding for table cells */
    }

</style>

<!-- TempData messages -->
@if (TempData["Message"] != null)
{
    <div class="alert alert-success">@TempData["Message"]</div>
}

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger">@TempData["Error"]</div>
}

<div class="details-container">
    <h1 class="news-title">
        @Html.DisplayFor(model => model.NewsTitle)
    </h1>

    <h2 class="news-headline">
        @Html.DisplayFor(model => model.Headline)
    </h2>

    <p class="meta-info">
        <table>
            <tr>
                <td>Published on:</td>
                <td>@Model.CreatedDate.ToString()</td>
            </tr>
            <tr>
                <td>Category:</td>
                <td>@(Model.Category?.CategoryDescription ?? "N/A")</td>
            </tr>
            <tr>
                <td>Source:</td>
                <td>@Html.DisplayFor(model => model.NewsSource)</td>
            </tr>
            <tr>
                <td>Author:</td>
                <td>@(Model.CreatedBy?.AccountName ?? "Unknown")</td>
            </tr>
            <tr>
                <td>Author's Email:</td>
                <td>@(Model.CreatedBy?.AccountEmail ?? "N/A")</td>
            </tr>
            <tr>
                <td>Modified by:</td>
                <td>@(Model.UpdatedBy?.AccountName ?? "N/A")</td>
            </tr>
            <tr>
                <td>Modified Date:</td>
                <td>@(Model.ModifiedDate?.ToString() ?? "Not modified")</td>
            </tr>
            <tr>
                <td>Content:</td>
                <td>@Html.Raw(Model.NewsContent)</td>
            </tr>
            @if (ViewBag.Tags != null)
            {
                <tr>
                    <td>Tag:</td>
                    <td>
                        @foreach (var tag in ViewBag.Tags)
                        {
                            <button type="button" class="btn btn-outline-primary">@tag</button>
                        }
                    </td>
                </tr>
            }
        </table>
    </p>

    <div class="action-buttons">
        @if (Model?.NewsArticleId != null)
        {
            <a asp-action="Edit" asp-route-id="@Model.NewsArticleId" class="btn btn-warning">Edit</a>
        }
        <a asp-action="Index" asp-controller="NewsArticles" class="btn btn-secondary">Back to News List</a>
    </div>
</div>